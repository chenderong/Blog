
@{
    ViewData["Title"] = "Test";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="user_article">
    <h1 class="title_txt"><a id="labTitle" href="#">记一次和阿里某总监对话引发的思考：说说你框架的设计思路和优点亮点！</a></h1><div class="blogstory">
        <div id="labBody">
            <h1>背景：</h1>
            <p>前不久和阿里的一个技术总监风动聊的时候，他问了这样一个问题：说说你框架的设计思路和优点？</p>
            <p>话说，这个问题，5年前开始就一直经常出现在眼前，可我从没认真为它找出过答案！</p>
            <p>于是，夜深深，我躺在床上，用笔记本，一边思考，一边打字，试着找寻！</p>
            <p>这些年来，我的框架或作品，都快凑满十二个了，每个单独都可以说上好几天。</p>
            <p>但如果时间只有半小时，我要怎么介绍呢？介绍哪些呢？</p>
            <p>出现在脑海里的框架有三个：CYQ.Data、ASP.NET Aries、Taurus.MVC。</p>
            <p>大概是因为近期的精力都在这上面吧的吧（如当年我精力花在Ｑblog一样吧）。</p>
            <h1>说说你框架的设计思路？</h1>
            <p>框架的设计思路？哪个框架？我自己挑一个？</p>
            <p>如果要讲Aries或Taurus，就必须讲CYQ.Data，因为它们都是基于CYQ.Data的存在而存在的。</p>
            <p>所以问题就变成回答：说说你CYQ.Data框架的设计思路？</p>
            <p>我感觉很难回答这个问题，内心也能感受到一丝抗拒这个问题的想法？</p>
            <p>框架是漫长的岁月演进重构而来的，最早期的思路是这样的：</p>
            <p>构造一个简单的MDataTable体系，传进一个表名，根据数据库链接拿到表结构，再根据行的列构造出ＳＱＬ语句执行，把数据读到ＭDataTable返回。</p>
            <p>以上一句概括了最早期的思路，但没有设计，简单并不亮。</p>
            <p>如果要说说最新版本的设计思路，我想不到该怎么表达，因为重构的次数太多了，几百上千次了，太多细节，每个细节都独立带有它自己的设计思维。</p>
            <p>就像腾迅最早也只是ＱＱ发个消息，现在发展到生态圈，你说人家是怎么设计现在的帝国的？</p>
            <h3><strong>也许，只是做着做着，就这样子了〜〜〜才是答案吧。</strong></h3>
            <h1>好吧，设计思路回答不上来，那就讲讲框架有什么亮点吧？</h1>
            <p>我了个去，又是这个问题，一个在我内心深深留下伤痕的问题。</p>
            <p>我曾经用尽洪荒之力写过一篇文章，来介绍框架的优势，可是我现在记不起来了！</p>
            <p>只能忘掉文章，重新思索了：</p>
            <p>1：框架支持多数据库。（旁白：支持多数据库的框架到处有吧）</p>
            <p>2：嗯，重点框架能把数据从一种数据库转向任意一种数据库（旁白：项目里需要混合数据库的场景太少，这功能没啥感觉）</p>
            <p>再想想：</p>
            <p>1：框架的缓存集成了Memcache、Redis（旁白：集成不是很简单的事情么？）</p>
            <p>2：嗯，但客户端没有引用第三方，都是自己写的，Json解析都是自己写的（旁白：只能说技术好，但功能不算亮点）</p>
            <p>再想想：</p>
            <p>1：框架实现了自动缓存。（旁白：缓存有啥特别，Hibernate也有二级缓存，说说你它有啥区别？）</p>
            <p>2：嗯，Ｈibernate的二级缓存没法自动失效，因为它的失效策略没法处理自定义的sql语句（旁白：你是怎么控制的？）</p>
            <p>3：嗯，我是通过分析执行的ＳＱＬ语句，得到语句所关联的表，通过表这个维度来控制的（旁白：那不会产生很多缓存无效问题？表的修改无处不在，能控制到行么？）</p>
            <p>4：不能，但可以控制列，嗯，所以我还设计了，可以指定忽略哪些字段的更新不触发缓存失效，也可以指定哪些表不需要缓存（旁白：如果不在ＳＱＬ层面，在应用层面如何控制缓存失效？）</p>
            <p>5：在业务代码控制吧？或者通过ＡＯＰ统一控制？（旁白：不是我想要的答案）</p>
            <p>6：也可以通过数据库来触发缓存失效，ＭＳＳＱＬ就有提供缓存依赖（旁白：具体怎么实现呢？）</p>
            <p>7：微软的直接调就好了，具体原理是通过触发器把修改的数据写入指定的表，再通过定时器扫表。（旁白：也不是我想要的答案，还有其它答案么？）</p>
            <p>8：没有了，你说说（旁白：以前好像讲过，现在想不起来了，说说你那个Aries框架的亮点吧）</p>
            <p>半小时已经差不多了，亮点依旧没有被感觉出来〜〜〜</p>
            <p>Aries的亮点？我还没恢复洪荒之力再给它写一篇框架的优势篇呢，该怎么介绍？</p>
            <p>1：嗯，框架就是传一个表名，就可以自动生成增删改查导入导出，还自定义了一套简单的前端语法，结合后端很容易开发（旁白：不知道你说什么，还是闲聊一下其它的吧.....)</p>
            <p>&nbsp;</p>
            <p>－－－－－－－－－－－－－－－－－－－重新思考，若只有半小时，该怎么介绍框架－－－－－－－－－－－－－－－－－</p>
            <p>&nbsp;</p>
            <h1>介绍：CYQ.Data的亮点</h1>
            <p>思考了1天，发现亮点功能太多：元数据缓存、AOP、UI交互、调试、模板引擎、Json工具、DB工具、分布式缓存、批量、内存表、文本数据库、防SQL注入、多数据库转换等。</p>
            <p>如果一个一个介绍及聊其技术细节，十年的成果，讲三天三夜也没完！</p>
            <p>可如果时间有限，只能讲三个，那我必须对其进行抽象总结。</p>
            <p>经过反复的思考，忽略人有我优，只选人无我有的角度，总结了三个核心：</p>
            <h2>1：自动缓存：抗并发。</h2>
            <p>对于中小型项目，自动解决抗并发问题，提升网站性能、简化代码，精简架构！</p>
            <p>对于大型的高并发大数据量的复杂业务，缓存还是要进一步细化控制命中率。</p>
            <h2>2：水平扩展：零编码。</h2>
            <p>Ａ：单种类数据库扩展到多种类数据库。</p>
            <p>Ｂ：单机缓存扩展到分布式缓存。</p>
            <p>Ｃ：单数据库扩展到集群数据库（读写分离）。</p>
            <p>通通只要简单追加配置即可。</p>
            <h2>3：数据结构：自由转。</h2>
            <p>Ａ：Json、Xml、实体类：可互转。</p>
            <p>Ｂ：泛型、字典、集合，与Ａ类：可互转。</p>
            <p>Ｃ：数据库表与Ａ类、B类：可互转。</p>
            <p>&nbsp;</p>
            <p>感觉这样抽象总结后，应该半小时就可以介绍完重点了，哈〜〜</p>
            <p>至于星座十二宫框架：ASP.NET Aries（白羊）、Taurus.MVC（金牛）、还有在重写中的第三星座Ｇemini.Workflow（双子）。</p>
            <p>该怎么抽象其介绍，需要多几个夜晚待我仔细想想〜〜〜</p>
            <h1>总结：</h1>
            <p>通过本次思考，意识到两个问题：</p>
            <p>1：曾以为好的作品，不需要去告诉用户怎么好，用了自然知道好在哪里。</p>
            <p>首先天真的假设了用户首先会用，其次假设了用户会口口相传。</p>
            <p>2：曾经以为经验丰富就可以Hold住一切，自由发挥。</p>
            <p>对于经常出现的问题或场景，与其每次都随机产生答案，不如深度的思考总结出一种较优的固定答案。</p>
        </div>
        <div class="post-tag" id="labTag">
            关键字
            <span>&nbsp;</span><a href="/search/cyq1162/%e6%a1%86%e6%9e%b6%e4%ba%ae%e7%82%b9" target="_blank" title="框架亮点">框架亮点</a><span>
                ,
            </span><a href="/search/cyq1162/cyq.data" target="_blank" title="cyq.data">cyq.data</a>
        </div><div class="sign">
            <div class="code" id="labSign">秋色园是QBlog的官方站点,由路过秋天创建,基于cyqdata数据层框架开发的支持多用户、多语言、多数据库(access,mssql,oracle)、目录级url等功能强大的博客系统</div>
        </div><div adkey="Detail_D1" class="ad"><a href=http://www.weibospirit.com" target="_blank"><img src="http://www.cyqdata.com/skin/system_tech/images/cyqdata.jpg" alt="新浪微博粉丝精灵，刷粉丝、刷评论、刷转发、企业商家微博营销必备工具" /></a>"</div><p class="right articalinfo">
            <span id="labEdit" style="display:none;"><a id="labID" href="/cyq1162/admin/article-edit-58060">编辑</a></span><span id="labCreateTime">2016/12/19 3:16:36</span> | <a id="labName" href="/cyq1162/article-cate-5812">记录点滴</a> |
            <label>评论</label><label id="labCommentCount">(1)</label>
            |
            <label>浏览</label><label id="labHits">(1614)</label>
        </p><div style="text-align: left;"></div>
    </div>
</div>

